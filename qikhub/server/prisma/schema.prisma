// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User management with Internet Identity integration
model User {
  id                String   @id @default(cuid())
  principalId       String   @unique @map("principal_id")
  email             String?  @unique
  displayName       String   @map("display_name")
  avatar            String?
  role              UserRole @default(USER)
  isActive          Boolean  @default(true) @map("is_active")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  
  // Relations
  events            Event[]
  devices           QikPointDevice[]
  checkIns          CheckIn[]
  notifications     Notification[]
  
  @@map("users")
}

// Event management
model Event {
  id                String       @id @default(cuid())
  name              String
  description       String
  startDate         DateTime     @map("start_date")
  endDate           DateTime     @map("end_date")
  maxAttendees      Int          @map("max_attendees")
  status            EventStatus  @default(DRAFT)
  venueName         String       @map("venue_name")
  venueAddress      String       @map("venue_address")
  venueLat          Float?       @map("venue_lat")
  venueLng          Float?       @map("venue_lng")
  wifiAvailable     Boolean      @default(false) @map("wifi_available")
  registrationOpen  Boolean      @default(true) @map("registration_open")
  requireApproval   Boolean      @default(false) @map("require_approval")
  customFields      Json?        @map("custom_fields")
  createdAt         DateTime     @default(now()) @map("created_at")
  updatedAt         DateTime     @updatedAt @map("updated_at")
  
  // Relations
  organizerId       String       @map("organizer_id")
  organizer         User         @relation(fields: [organizerId], references: [id])
  devices           QikPointDevice[]
  participants      Participant[]
  checkIns          CheckIn[]
  analytics         EventAnalytics[]
  
  @@map("events")
}

// QikPoint device management
model QikPointDevice {
  id                String       @id @default(cuid())
  name              String
  deviceType        DeviceType   @map("device_type")
  deviceId          String       @unique @map("device_id")
  status            DeviceStatus @default(ACTIVE)
  locationName      String       @map("location_name")
  locationLat       Float?       @map("location_lat")
  locationLng       Float?       @map("location_lng")
  firmwareVersion   String       @map("firmware_version")
  batteryLevel      Int          @default(100) @map("battery_level")
  signalStrength    Int          @default(100) @map("signal_strength")
  isOnline          Boolean      @default(true) @map("is_online")
  lastSeen          DateTime     @default(now()) @map("last_seen")
  configuration     Json         @default("{}")
  healthData        Json?        @map("health_data")
  createdAt         DateTime     @default(now()) @map("created_at")
  updatedAt         DateTime     @updatedAt @map("updated_at")
  
  // Relations
  ownerId           String       @map("owner_id")
  owner             User         @relation(fields: [ownerId], references: [id])
  eventId           String?      @map("event_id")
  event             Event?       @relation(fields: [eventId], references: [id])
  checkIns          CheckIn[]
  
  @@map("qikpoint_devices")
}

// Event participants
model Participant {
  id                String       @id @default(cuid())
  name              String
  email             String
  phone             String?
  avatar            String?
  customData        Json?        @map("custom_data")
  registrationDate  DateTime     @default(now()) @map("registration_date")
  status            ParticipantStatus @default(REGISTERED)
  checkedInAt       DateTime?    @map("checked_in_at")
  checkedOutAt      DateTime?    @map("checked_out_at")
  createdAt         DateTime     @default(now()) @map("created_at")
  updatedAt         DateTime     @updatedAt @map("updated_at")
  
  // Relations
  eventId           String       @map("event_id")
  event             Event        @relation(fields: [eventId], references: [id])
  checkIns          CheckIn[]
  
  @@unique([eventId, email])
  @@map("participants")
}

// Check-in records
model CheckIn {
  id                String   @id @default(cuid())
  checkInTime       DateTime @map("check_in_time")
  checkOutTime      DateTime? @map("check_out_time")
  deviceId          String   @map("device_id")
  metadata          Json?
  createdAt         DateTime @default(now()) @map("created_at")
  
  // Relations
  participantId     String   @map("participant_id")
  participant       Participant @relation(fields: [participantId], references: [id])
  eventId           String   @map("event_id")
  event             Event    @relation(fields: [eventId], references: [id])
  device            QikPointDevice @relation(fields: [deviceId], references: [id])
  
  @@map("check_ins")
}

// Event analytics
model EventAnalytics {
  id                String   @id @default(cuid())
  eventId           String   @map("event_id")
  totalRegistrations Int     @map("total_registrations")
  totalCheckIns     Int      @map("total_check_ins")
  totalCheckOuts    Int      @map("total_check_outs")
  noShowRate        Float    @map("no_show_rate")
  averageEngagementTime Int   @map("average_engagement_time")
  peakHourData      Json     @map("peak_hour_data")
  deviceUtilization Json     @map("device_utilization")
  demographics      Json?
  recordedAt        DateTime @default(now()) @map("recorded_at")
  
  // Relations
  event             Event    @relation(fields: [eventId], references: [id])
  
  @@map("event_analytics")
}

// System notifications
model Notification {
  id                String           @id @default(cuid())
  title             String
  message           String
  type              NotificationType
  isRead            Boolean          @default(false) @map("is_read")
  metadata          Json?
  createdAt         DateTime         @default(now()) @map("created_at")
  
  // Relations
  userId            String           @map("user_id")
  user              User             @relation(fields: [userId], references: [id])
  
  @@map("notifications")
}

// Enums
enum UserRole {
  USER
  ORGANIZER
  ADMIN
}

enum EventStatus {
  DRAFT
  ACTIVE
  ONGOING
  COMPLETED
  CANCELLED
}

enum DeviceType {
  NFC
  QR
  HYBRID
}

enum DeviceStatus {
  ACTIVE
  INACTIVE
  MAINTENANCE
  ERROR
}

enum ParticipantStatus {
  REGISTERED
  APPROVED
  CHECKED_IN
  CHECKED_OUT
  CANCELLED
}

enum NotificationType {
  INFO
  WARNING
  ERROR
  SUCCESS
}

// Indexes for performance
model Indexes {
  @@index([organizerId])
  @@index([eventId])
  @@index([deviceId])
  @@index([participantId])
  @@index([status])
  @@index([startDate])
  @@index([createdAt])
}
