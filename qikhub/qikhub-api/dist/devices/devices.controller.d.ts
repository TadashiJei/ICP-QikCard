import { DevicesService } from './devices.service';
import { CreateDeviceDto } from './dto/create-device.dto';
import { UpdateDeviceDto } from './dto/update-device.dto';
export declare class DevicesController {
    private readonly devicesService;
    constructor(devicesService: DevicesService);
    findAll(ownerId?: string, eventId?: string): import("@prisma/client").Prisma.PrismaPromise<{
        name: string;
        status: import("@prisma/client").$Enums.DeviceStatus;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        eventId: string | null;
        deviceType: import("@prisma/client").$Enums.DeviceType;
        deviceId: string;
        locationName: string;
        locationLat: number | null;
        locationLng: number | null;
        firmwareVersion: string;
        batteryLevel: number;
        signalStrength: number;
        isOnline: boolean;
        ownerId: string;
        configuration: import("@prisma/client/runtime/library").JsonValue;
        lastSeen: Date;
        healthData: import("@prisma/client/runtime/library").JsonValue | null;
    }[]>;
    findByOwner(ownerId: string): import("@prisma/client").Prisma.PrismaPromise<{
        name: string;
        status: import("@prisma/client").$Enums.DeviceStatus;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        eventId: string | null;
        deviceType: import("@prisma/client").$Enums.DeviceType;
        deviceId: string;
        locationName: string;
        locationLat: number | null;
        locationLng: number | null;
        firmwareVersion: string;
        batteryLevel: number;
        signalStrength: number;
        isOnline: boolean;
        ownerId: string;
        configuration: import("@prisma/client/runtime/library").JsonValue;
        lastSeen: Date;
        healthData: import("@prisma/client/runtime/library").JsonValue | null;
    }[]>;
    findByEvent(eventId: string): import("@prisma/client").Prisma.PrismaPromise<{
        name: string;
        status: import("@prisma/client").$Enums.DeviceStatus;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        eventId: string | null;
        deviceType: import("@prisma/client").$Enums.DeviceType;
        deviceId: string;
        locationName: string;
        locationLat: number | null;
        locationLng: number | null;
        firmwareVersion: string;
        batteryLevel: number;
        signalStrength: number;
        isOnline: boolean;
        ownerId: string;
        configuration: import("@prisma/client/runtime/library").JsonValue;
        lastSeen: Date;
        healthData: import("@prisma/client/runtime/library").JsonValue | null;
    }[]>;
    findOne(id: string): Promise<{
        name: string;
        status: import("@prisma/client").$Enums.DeviceStatus;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        eventId: string | null;
        deviceType: import("@prisma/client").$Enums.DeviceType;
        deviceId: string;
        locationName: string;
        locationLat: number | null;
        locationLng: number | null;
        firmwareVersion: string;
        batteryLevel: number;
        signalStrength: number;
        isOnline: boolean;
        ownerId: string;
        configuration: import("@prisma/client/runtime/library").JsonValue;
        lastSeen: Date;
        healthData: import("@prisma/client/runtime/library").JsonValue | null;
    }>;
    create(dto: CreateDeviceDto): import("@prisma/client").Prisma.Prisma__QikPointDeviceClient<{
        name: string;
        status: import("@prisma/client").$Enums.DeviceStatus;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        eventId: string | null;
        deviceType: import("@prisma/client").$Enums.DeviceType;
        deviceId: string;
        locationName: string;
        locationLat: number | null;
        locationLng: number | null;
        firmwareVersion: string;
        batteryLevel: number;
        signalStrength: number;
        isOnline: boolean;
        ownerId: string;
        configuration: import("@prisma/client/runtime/library").JsonValue;
        lastSeen: Date;
        healthData: import("@prisma/client/runtime/library").JsonValue | null;
    }, never, import("@prisma/client/runtime/library").DefaultArgs, import("@prisma/client").Prisma.PrismaClientOptions>;
    update(id: string, dto: UpdateDeviceDto): Promise<{
        name: string;
        status: import("@prisma/client").$Enums.DeviceStatus;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        eventId: string | null;
        deviceType: import("@prisma/client").$Enums.DeviceType;
        deviceId: string;
        locationName: string;
        locationLat: number | null;
        locationLng: number | null;
        firmwareVersion: string;
        batteryLevel: number;
        signalStrength: number;
        isOnline: boolean;
        ownerId: string;
        configuration: import("@prisma/client/runtime/library").JsonValue;
        lastSeen: Date;
        healthData: import("@prisma/client/runtime/library").JsonValue | null;
    }>;
    remove(id: string): Promise<{
        success: boolean;
    }>;
    assignEvent(id: string, eventId: string): Promise<{
        name: string;
        status: import("@prisma/client").$Enums.DeviceStatus;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        eventId: string | null;
        deviceType: import("@prisma/client").$Enums.DeviceType;
        deviceId: string;
        locationName: string;
        locationLat: number | null;
        locationLng: number | null;
        firmwareVersion: string;
        batteryLevel: number;
        signalStrength: number;
        isOnline: boolean;
        ownerId: string;
        configuration: import("@prisma/client/runtime/library").JsonValue;
        lastSeen: Date;
        healthData: import("@prisma/client/runtime/library").JsonValue | null;
    }>;
    unassignEvent(id: string): Promise<{
        name: string;
        status: import("@prisma/client").$Enums.DeviceStatus;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        eventId: string | null;
        deviceType: import("@prisma/client").$Enums.DeviceType;
        deviceId: string;
        locationName: string;
        locationLat: number | null;
        locationLng: number | null;
        firmwareVersion: string;
        batteryLevel: number;
        signalStrength: number;
        isOnline: boolean;
        ownerId: string;
        configuration: import("@prisma/client/runtime/library").JsonValue;
        lastSeen: Date;
        healthData: import("@prisma/client/runtime/library").JsonValue | null;
    }>;
}
