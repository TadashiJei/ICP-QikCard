import { Prisma } from '@prisma/client';
import { PrismaService } from '../prisma/prisma.service';
import { CreateEventDto } from './dto/create-event.dto';
import { UpdateEventDto } from './dto/update-event.dto';
export declare class EventsService {
    private readonly prisma;
    constructor(prisma: PrismaService);
    create(dto: CreateEventDto): Promise<{
        description: string;
        name: string;
        startDate: Date;
        endDate: Date;
        maxAttendees: number;
        status: import("@prisma/client").$Enums.EventStatus;
        venueName: string;
        venueAddress: string;
        venueLat: number | null;
        venueLng: number | null;
        wifiAvailable: boolean;
        registrationOpen: boolean;
        requireApproval: boolean;
        customFields: Prisma.JsonValue | null;
        organizerId: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
    }>;
    findAll(): Promise<{
        description: string;
        name: string;
        startDate: Date;
        endDate: Date;
        maxAttendees: number;
        status: import("@prisma/client").$Enums.EventStatus;
        venueName: string;
        venueAddress: string;
        venueLat: number | null;
        venueLng: number | null;
        wifiAvailable: boolean;
        registrationOpen: boolean;
        requireApproval: boolean;
        customFields: Prisma.JsonValue | null;
        organizerId: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
    }[]>;
    findOne(id: string): Promise<{
        description: string;
        name: string;
        startDate: Date;
        endDate: Date;
        maxAttendees: number;
        status: import("@prisma/client").$Enums.EventStatus;
        venueName: string;
        venueAddress: string;
        venueLat: number | null;
        venueLng: number | null;
        wifiAvailable: boolean;
        registrationOpen: boolean;
        requireApproval: boolean;
        customFields: Prisma.JsonValue | null;
        organizerId: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
    }>;
    update(id: string, dto: UpdateEventDto): Promise<{
        description: string;
        name: string;
        startDate: Date;
        endDate: Date;
        maxAttendees: number;
        status: import("@prisma/client").$Enums.EventStatus;
        venueName: string;
        venueAddress: string;
        venueLat: number | null;
        venueLng: number | null;
        wifiAvailable: boolean;
        registrationOpen: boolean;
        requireApproval: boolean;
        customFields: Prisma.JsonValue | null;
        organizerId: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
    }>;
    remove(id: string): Promise<{
        success: boolean;
    }>;
}
